View(raw_basis)
# Load existing quarterly data
reg_tri <- read_csv("Data/data_quarter/regional_tri.csv")
teste <- read.csv(### Quarterly conversion
# Packages
library(dplyr)
library(readr)
teste2 <- read_csv("Data/data_month/nacional_mensal.csv")
View(teste2)
teste2 <- read_csv2("Data/data_month/nacional_mensal.csv")
View(teste2)
teste2 <- read_csv2("Data/data_month/meteorologicos_mensal.csv")
View(teste2)
source("~/.active-rstudio-document", echo=TRUE)
rlang::last_trace()
View(raw_basis)
# Read and bind all files together
raw_basis <- file_list %>%
lapply(read_csv2) %>%
bind_rows()
View(raw_basis)
nacional_mensal <- read.csv2("Data/data_month/nacional_mensal.csv")
meteorologicos_mensal <- read.csv("Data/data_month/meteorologicos_mensal.csv")
regional_mensal <- read.csv2("Data/data_month/regional_mensal.csv")
View(meteorologicos_mensal)
View(nacional_mensal)
View(regional_mensal)
nacional_mensal = nacional_mensal[-1,]
View(nacional_mensal)
nacional_mensal = nacional_mensal[-1,]
View(nacional_mensal)
# Raw data
nacional_mensal <- read.csv2("Data/data_month/nacional_mensal.csv")
nacional_mensal = nacional_mensal[-1,]
View(nacional_mensal)
metereologicos_mensal = metereologicos_mensal[-1,-1:-2]
meteorologicos_mensal = metorologicos_mensal[-1,-1:-2]
meteorologicos_mensal <- read.csv("Data/data_month/meteorologicos_mensal.csv")
regional_mensal <- read.csv2("Data/data_month/regional_mensal.csv")
meteorologicos_mensal = metorologicos_mensal[-1,-1:-2]
meteorologicos_mensal = meteorologicos_mensal[-1,-1:-2]
View(meteorologicos_mensal)
meteorologicos_mensal <- read.csv("Data/data_month/meteorologicos_mensal.csv")
meteorologicos = meteorologicos_mensal[-1,-1:-2]
View(meteorologicos_mensal)
View(meteorologicos)
regional_mensal = regional_mensal[-1,-1]
View(regional_mensal)
regional_mensal <- read.csv2("Data/data_month/regional_mensal.csv")
regional = regional_mensal[-1,-1]
View(regional)
View(regional_mensal)
base_bruta = cbind(nacional_mensal,
metereologicos,
regional)
base_bruta = cbind(nacional_mensal,
meteorologicos,
regional)
View(meteorologicos)
View(meteorologicos_mensal)
View(nacional_mensal)
meteorologicos = meteorologicos_mensal[-1,-1:-12]
meteorologicos_mensal <- read.csv("Data/data_month/meteorologicos_mensal.csv")
meteorologicos = meteorologicos_mensal[,-1:-12]
View(meteorologicos)
# Packages
library(dplyr)
library(readr)
library(lubridate)
library(tidyr)
# Raw data
nacional_mensal <- read.csv2("Data/data_month/nacional_mensal.csv")
meteorologicos_mensal <- read.csv("Data/data_month/meteorologicos_mensal.csv")
regional_mensal <- read.csv2("Data/data_month/regional_mensal.csv")
nacional_mensal = nacional_mensal[-1,]
meteorologicos = meteorologicos_mensal[,-1:-12]
View(meteorologicos)
meteorologicos_mensal <- read.csv("Data/data_month/meteorologicos_mensal.csv")
meteorologicos = meteorologicos_mensal[-1:-12,]
View(meteorologicos)
meteorologicos = meteorologicos_mensal[-1:-12,-1:-2]
meteorologicos_mensal <- read.csv("Data/data_month/meteorologicos_mensal.csv")
meteorologicos = meteorologicos_mensal[-1:-12,-1:-2]
View(meteorologicos)
View(meteorologicos)
nacional_mensal <- read.csv2("Data/data_month/nacional_mensal.csv")
meteorologicos_mensal <- read.csv("Data/data_month/meteorologicos_mensal.csv")
regional_mensal <- read.csv2("Data/data_month/regional_mensal.csv")
nacional_mensal = nacional_mensal[-1,]
meteorologicos = meteorologicos_mensal[-1:-12,-1]
regional = regional_mensal[-1,]
View(meteorologicos)
View(nacional_mensal)
nacional_mensal = nacional_mensal[,-283]
regional = regional[,-283]
View(regional)
base_bruta = cbind(nacional_mensal,
meteorologicos,
regional)
### Quarterly conversion
# Packages
library(dplyr)
library(readr)
library(lubridate)
library(tidyr)
# Raw data
nacional_mensal <- read.csv2("Data/data_month/nacional_mensal.csv")
meteorologicos_mensal <- read.csv("Data/data_month/meteorologicos_mensal.csv")
regional_mensal <- read.csv2("Data/data_month/regional_mensal.csv")
nacional_mensal = nacional_mensal[-1,]
meteorologicos = meteorologicos_mensal[-1:-12,-1]
regional = regional_mensal[-1,]
nacional_mensal = nacional_mensal[-283,]
regional = regional[-283,]
base_bruta = cbind(nacional_mensal,
meteorologicos,
regional)
View(base_bruta)
View(meteorologicos_mensal)
View(meteorologicos)
source("~/.active-rstudio-document", echo=TRUE)
View(meteorologicos_mensal)
View(meteorologicos)
View(regional)
View(nacional_mensal)
View(base_bruta)
# Make quarterly
to_quarterly <- function(df, date_col = "date") {
df %>%
mutate(
!!date_col := as.Date(.data[[date_col]]),
# Get quarter-end dates: 03, 06, 09, 12
quarter_date = ceiling_date(.data[[date_col]], "quarter") - days(1)
) %>%
group_by(quarter_date) %>%
summarise(across(where(is.numeric), ~ mean(.x, na.rm = TRUE)), .groups = "drop")
}
tri_bruta <- to_quarterly(base_bruta, date_col = "date")
View(base_bruta)
to_quarterly <- function(df, date_col = "date") {
df %>%
mutate(
!!date_col := as.Date(paste0(.data[[date_col]], "-01"), format = "%m/%Y-%d"),
# Get quarter-end dates: 03, 06, 09, 12
quarter_date = format(ceiling_date(.data[[date_col]], "quarter") - days(1), "%m/%Y")
) %>%
group_by(quarter_date) %>%
summarise(across(where(is.numeric), ~ mean(.x, na.rm = TRUE)), .groups = "drop")
}
tri_bruta <- to_quarterly(base_bruta, date_col = "date")
View(tri_bruta)
to_quarterly2 <- function(df, date_col = "date") {
df %>%
mutate(
# Convert "MM/YYYY" â†’ Date with day 1
!!date_col := as.Date(paste0(.data[[date_col]], "-01"), format = "%m/%Y-%d"),
# Calculate quarter end date (e.g. 2002-03-31, 2002-06-30)
quarter_end = ceiling_date(.data[[date_col]], "quarter") - days(1),
year = year(quarter_end),
quarter = quarter(quarter_end)
) %>%
group_by(quarter_end, year, quarter) %>%
summarise(
across(where(is.numeric), ~ mean(.x, na.rm = TRUE)),
.groups = "drop"
) %>%
arrange(quarter_end) %>%
mutate(
# Sequential time index starting at 1 for earliest quarter
time_index = row_number()
)
}
tri_bruta <- to_quarterly2(base_bruta, date_col = "date")
View(tri_bruta)
to_quarterly2 <- function(df, date_col = "date") {
df %>%
mutate(
!!date_col := as.Date(paste0(.data[[date_col]], "-01"), format = "%m/%Y-%d"),
quarter = ceiling_date(.data[[date_col]], "quarter") - days(1)
) %>%
group_by(quarter) %>%
summarise(
across(where(is.numeric), ~ mean(.x, na.rm = TRUE)),
.groups = "drop"
) %>%
arrange(quarter) %>%
mutate(time_index = row_number())
}
tri_bruta <- to_quarterly2(base_bruta, date_col = "date")
View(tri_bruta)
ipea_mensal <- read.csv("Data/data_month/dadosipea.csv")
View(ipea_mensal)
ipea = ipea_mensal[,-1]
View(ipea)
ipea = ipea_mensal[-283:-284,-1]
ipea_mensal <- read.csv("Data/data_month/dadosipea.csv")
ipea = ipea_mensal[-283:-284,-1]
View(ipea)
### Quarterly conversion
# Packages
library(dplyr)
library(readr)
library(lubridate)
library(tidyr)
# Raw data
nacional_mensal <- read.csv2("Data/data_month/nacional_mensal.csv")
meteorologicos_mensal <- read.csv("Data/data_month/meteorologicos_mensal.csv")
regional_mensal <- read.csv2("Data/data_month/regional_mensal.csv")
ipea_mensal <- read.csv("Data/data_month/dadosipea.csv")
nacional_mensal = nacional_mensal[-1,-1]
meteorologicos = meteorologicos_mensal[-1:-12,-1:-2]
regional = regional_mensal[-1,-1]
ipea = ipea_mensal[-283:-284,-1]
nacional_mensal = nacional_mensal[-283,]
regional = regional[-283,]
base_bruta = cbind(ipea,
nacional_mensal,
meteorologicos,
regional)
View(base_bruta)
View(base_bruta)
View(tri_bruta)
colnames(base_bruta)
rm(meteorologicos_mensal, regional_mensal, ipea_mensal)
colnames(nacional_mensal)
### Quarterly conversion
# Packages
library(dplyr)
library(readr)
library(lubridate)
library(tidyr)
# Raw data
nacional_mensal <- read.csv2("Data/data_month/nacional_mensal.csv")
meteorologicos_mensal <- read.csv("Data/data_month/meteorologicos_mensal.csv")
regional_mensal <- read.csv2("Data/data_month/regional_mensal.csv")
ipea_mensal <- read.csv("Data/data_month/dadosipea.csv")
nacional_mensal = nacional_mensal[-1,-1]
meteorologicos = meteorologicos_mensal[-1:-12,-1:-2]
regional = regional_mensal[-1,-1]
ipea = ipea_mensal[-283:-284,-1]
nacional_mensal = nacional_mensal[-283,]
regional = regional[-283,]
base_bruta = cbind(ipea,
nacional_mensal,
meteorologicos,
regional)
rm(meteorologicos_mensal, regional_mensal, ipea_mensal)
colnames(nacional_mensal)
colnames(base_bruta)
### Quarterly conversion
# Packages
library(dplyr)
library(readr)
library(lubridate)
library(tidyr)
# Raw data
nacional_mensal <- read.csv2("Data/data_month/nacional_mensal.csv")
meteorologicos_mensal <- read.csv("Data/data_month/meteorologicos_mensal.csv")
regional_mensal <- read.csv2("Data/data_month/regional_mensal.csv")
ipea_mensal <- read.csv("Data/data_month/dadosipea.csv")
nacional_mensal = nacional_mensal[-1,-1]
meteorologicos = meteorologicos_mensal[-1:-12,-1:-2]
regional = regional_mensal[-1,-1]
ipea = ipea_mensal[-283:-284,-1]
nacional_mensal = nacional_mensal[-283,]
regional = regional[-283,]
base_bruta = cbind(ipea,
nacional_mensal,
meteorologicos,
regional)
rm(meteorologicos_mensal, regional_mensal, ipea_mensal)
View(nacional_mensal)
to_quarterly2 <- function(df, date_col = "date") {
df %>%
mutate(
!!date_col := as.Date(paste0(.data[[date_col]], "-01"), format = "%m/%Y-%d"),
quarter = ceiling_date(.data[[date_col]], "quarter") - days(1)
) %>%
group_by(quarter) %>%
summarise(
across(where(is.numeric), ~ mean(.x, na.rm = TRUE)),
.groups = "drop"
) %>%
arrange(quarter) %>%
mutate(time_index = row_number())
}
View(base_bruta)
# Make quarterly
# now my date col is different: YYYY-MM-DD. i have to account for that. i believe we can maintain the format
to_quarterly <- function(df, date_col = "date") {
df %>%
mutate(
!!date_col := as.Date(.data[[date_col]]),
# Get quarter-end dates: 03, 06, 09, 12
quarter_date = ceiling_date(.data[[date_col]], "quarter") - days(1)
) %>%
group_by(quarter_date) %>%
summarise(across(where(is.numeric), ~ mean(.x, na.rm = TRUE)), .groups = "drop")
}
to_quarterly1 <- function(df, date_col = "date") {
df %>%
mutate(
!!date_col := as.Date(paste0(.data[[date_col]], "-01"), format = "%m/%Y-%d"),
# Get quarter-end dates: 03, 06, 09, 12
quarter_date = format(ceiling_date(.data[[date_col]], "quarter") - days(1), "%m/%Y")
) %>%
group_by(quarter_date) %>%
summarise(across(where(is.numeric), ~ mean(.x, na.rm = TRUE)), .groups = "drop")
}
tri_bruta <- to_quarterly(base_bruta, date_col = "date")
View(tri_bruta)
View(base_bruta)
non_numeric_cols <- names(base_bruta)[!sapply(base_bruta, is.numeric)]
print(non_numeric_cols)
# Raw data
nacional_mensal <- read.csv2("Data/data_month/nacional_mensal.csv")
nacional_mensal = nacional_mensal[-1,-1]
nacional_mensal = nacional_mensal[-283,]
base_bruta = cbind(ipea,
nacional_mensal,
meteorologicos,
regional)
tri_bruta <- to_quarterly(base_bruta, date_col = "date")
View(tri_bruta)
tail(tri_bruta, 2)
rm(to_quarterly1, to_quarterly2)
# Add other quarter data
data_tri <- read.csv2("Data/data_quarter/data_tri.csv")
View(data_tri)
# Add other quarter data
data_tri <- read.csv2("Data/data_quarter/data_tri.csv")
data_tri <- read.csv2("Data/data_quarter/data_tri.csv")
tri_bruta = cbind(tri_bruta,
data_tri)
View(tri_bruta)
tri_bruta = cbind(tri_bruta[-94],
data_tri)
tri_bruta <- tri_bruta[-94,]
tri_bruta = cbind(tri_bruta,
data_tri)
View(tri_bruta)
write.csv(tri_bruta, file = "Data/data_quarter/tri_data.csv"
write.csv(tri_bruta, file = "Data/data_quarter/tri_data.csv")
write.csv(tri_bruta, file = "Data/data_quarter/tri_data.csv", row.names = FALSE)
# Make quarterly
# now my date col is different: YYYY-MM-DD. i have to account for that. i believe we can maintain the format
to_quarterly <- function(df, date_col = "date") {
df %>%
mutate(
!!date_col := as.Date(.data[[date_col]]),
# Get quarter-end dates: 03, 06, 09, 12
date = ceiling_date(.data[[date_col]], "quarter") - days(1)
) %>%
group_by(quarter_date) %>%
summarise(across(where(is.numeric), ~ mean(.x, na.rm = TRUE)), .groups = "drop")
}
source("~/.active-rstudio-document", echo=TRUE)
source("~/.active-rstudio-document", echo=TRUE)
View(tri_bruta)
base_ponto = base_bruta
tipo = c(4)
for (i in 2:ncol(base_ponto)){
print(i)
if (sum(base_ponto[,i]<0) > 0) {
if (sum(base_ponto[,i]==0) > 0) {
tipo = append(tipo, 3)
} else {
tipo = append(tipo, 1)
}
} else {
if (sum(base_ponto[,i]==0) > 0){
tipo = append(tipo, 2)
} else {
tipo = append(tipo, 0)
}
}
}
for (i in 2:ncol(base_ponto)){
print(i)
if (sum(base_ponto[,i]<0) > 0) {
if (sum(base_ponto[,i]==0) > 0) {
tipo = append(tipo, 3)
} else {
tipo = append(tipo, 1)
}
} else {
if (sum(base_ponto[,i]==0) > 0){
tipo = append(tipo, 2)
} else {
tipo = append(tipo, 0)
}
}
}
any(is.na(base_bruta))
sum(is.na(base_ponto))
colSums(is.na(base_ponto))
View(base_bruta)
base_ponto = tri_bruta
tipo = c(4)
for (i in 2:ncol(base_ponto)){
print(i)
if (sum(base_ponto[,i]<0) > 0) {
if (sum(base_ponto[,i]==0) > 0) {
tipo = append(tipo, 3)
} else {
tipo = append(tipo, 1)
}
} else {
if (sum(base_ponto[,i]==0) > 0){
tipo = append(tipo, 2)
} else {
tipo = append(tipo, 0)
}
}
}
any(is.na(tri_bruta))
sum(is.na(tri_bruta))
colSums(is.na(tri_bruta))
# Add other quarter data
data_tri <- read.csv2("Data/data_quarter/datareg_tri.csv")
tri_bruta = cbind(tri_bruta,
data_tri)
write.csv(tri_bruta, file = "Data/data_quarter/tri_data.csv", row.names = FALSE)
base_ponto = tri_bruta
tipo = c(4)
for (i in 2:ncol(base_ponto)){
print(i)
if (sum(base_ponto[,i]<0) > 0) {
if (sum(base_ponto[,i]==0) > 0) {
tipo = append(tipo, 3)
} else {
tipo = append(tipo, 1)
}
} else {
if (sum(base_ponto[,i]==0) > 0){
tipo = append(tipo, 2)
} else {
tipo = append(tipo, 0)
}
}
}
colSums(is.na(tri_bruta))
sum(is.na(tri_bruta))
source("~/Trabalho_R/TCC_RSecon/Data/Scripts/make_quarterly.R", echo=TRUE)
base_ponto = tri_bruta
tipo = c(4)
for (i in 2:ncol(base_ponto)){
print(i)
if (sum(base_ponto[,i]<0) > 0) {
if (sum(base_ponto[,i]==0) > 0) {
tipo = append(tipo, 3)
} else {
tipo = append(tipo, 1)
}
} else {
if (sum(base_ponto[,i]==0) > 0){
tipo = append(tipo, 2)
} else {
tipo = append(tipo, 0)
}
}
}
sum(is.na(tri_bruta))
# Assuming tipo vector is already filled
variable_types = data.frame(
Variable = colnames(base_ponto),
Category = tipo
)
View(variable_types)
View(variable_types)
library(forecast)
seasonal_diffs_needed <- sapply(base_ponto[ , -1], function(col) {
ts_col <- ts(col, frequency = 12)  # set frequency to match your data period
nsdiffs(ts_col)
})
seasonal_diffs_needed <- sapply(base_ponto[ , -1], function(col) {
ts_col <- ts(col, frequency = 4)  # set frequency to match your data period
nsdiffs(ts_col)
})
seasonal_diffs_needed
regional_mensal <- read.csv2("Data/data_month/regional_mensal.csv")
regional = regional_mensal[-1,-1]
regional = regional[-283,]
View(regional)
# Add other quarter data
data_tri <- read.csv2("Data/data_quarter/datareg_tri.csv")
View(data_tri)
data_tri <- data_tri[,-1]
View(data_tri)
tri_bruta = cbind(tri_bruta,
data_tri)
write.csv(tri_bruta, file = "Data/data_quarter/tri_data.csv", row.names = FALSE)
source("~/.active-rstudio-document", echo=TRUE)
source("~/Trabalho_R/TCC_RSecon/Data/Scripts/make_quarterly.R", echo=TRUE)
rm(base_bruta, data_tri, ipea, meteorologicos, nacional_mensal, regional)
source("~/.active-rstudio-document", echo=TRUE)
variable_types = data.frame(
Variable = colnames(base_ponto),
Category = tipo,
Seasonal = seasonal_diffs_needed
)
seasonal_diffs_needed <- sapply(base_ponto, function(col) {
ts_col <- ts(col, frequency = 4)  # set frequency to match your data period
nsdiffs(ts_col)
})
seasonal_diffs_needed
variable_types = data.frame(
Variable = colnames(base_ponto),
Category = tipo,
Seasonal = seasonal_diffs_needed
)
View(variable_types)
